name: Documentation Functional Testing

on:
  push:
    paths:
      - "tutorial/**/*.task.sh"
      - "how-to/**/*.task.sh"
  pull_request:
    paths:
      - "tutorial/**/*.task.sh"
      - "how-to/**/*.task.sh"
  # Manual trigger
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: docs-validation-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  # Dry-run switch. Set to "1" to print without executing.
  DOCS_DRY_RUN: "1"

jobs:
  lint-snippets:
    name: Lint snippet shell files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Lint shell snippets
        run: make lint

  plan-and-run:
    name: Plan & run docs tests
    needs: lint-snippets
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine changed snippet files
        id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            tutorial/**/*.task.sh
            how-to/**/*.task.sh

      - name: Write changed list to file
        id: write-changed
        if: steps.changed.outputs.all_changed_files != ''
        run: |
          # No quotes around the variable allows the shell to perform word splitting
          printf '%s\n' ${{ steps.changed.outputs.all_changed_files }} > changed_snippets.txt

          COUNT=$(wc -l < changed_snippets.txt | tr -d ' ')
          echo "count=${COUNT}" >> "$GITHUB_OUTPUT"

          {
            echo "### Changed snippets"
            echo
            echo "**${COUNT} file(s) changed:**"
            echo
            sed 's/^/- /' changed_snippets.txt
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Short-circuit if nothing to run
        if: steps.write-changed.outputs.count == null || steps.write-changed.outputs.count == '0'
        run: echo "No .task.sh files changed. Skipping subsequent steps."

      - name: Set up Python (executor/selector)
        if: steps.write-changed.outputs.count > 0
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build and display execution plan
        if: steps.write-changed.outputs.count > 0
        id: plan
        run: |
          python ci/select-doc-pages.py --changed-file-list changed_snippets.txt --out plan.txt
          PLAN_COUNT=$(wc -l < plan.txt | tr -d ' ')
          echo "count=${PLAN_COUNT}" >> "$GITHUB_OUTPUT"

          echo "--- Execution Plan (${PLAN_COUNT} steps) ---"
          nl -ba plan.txt || true
          echo "-----------------------------------"

          {
            echo "### Execution plan"
            if [[ "$PLAN_COUNT" -gt 0 ]]; then
              echo "Selector produced a plan with **${PLAN_COUNT}** item(s)."
              echo '```'
              cat plan.txt
              echo '```'
            else
              echo "_Selector produced an empty plan._"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Fail if plan is unexpectedly empty
        if: steps.write-changed.outputs.count > 0 && steps.plan.outputs.count == '0'
        run: |
          echo "::error::Selector produced an empty plan, but there were changed snippets."
          exit 1

      - name: Dry-run plan validation
        if: env.DOCS_DRY_RUN == '1' && steps.plan.outputs.count > 0
        run: |
          echo "Executing dry-run validation of the plan..."
          python ci/run-doc-pages.py --plan plan.txt --dry-run

      - name: Execute plan
        if: env.DOCS_DRY_RUN != '1' && steps.plan.outputs.count > 0
        run: |
          python ci/run-doc-pages.py --plan plan.txt 2>&1 | tee run.log

      - name: Upload artifacts (plan & logs)
        if: always() && steps.write-changed.outputs.count > 0
        uses: actions/upload-artifact@v4
        with:
          name: docs-validation-artifacts-${{ github.run_id }}
          path: |
            plan.txt
            changed_snippets.txt
            run.log
          if-no-files-found: ignore